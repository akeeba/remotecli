<?xml version="1.0" encoding="UTF-8"?>
<article version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <title>Akeeba Backup JSON API</title>

    <author>
      <personname><firstname>Nicholas</firstname><surname>Dionysopoulos</surname></personname>

      <affiliation>
        <orgname>Akeeba Ltd</orgname>
      </affiliation>
    </author>

    <copyright>
      <year>2011-2022</year>

      <holder>Akeeba Ltd</holder>
    </copyright>
  </info>

  <section xml:id="introduction">
    <title>Introduction to the API</title>

    <para>The Professional (for-a-fee) versions Akeeba Backup for Joomla!,
    Akeeba Backup for WordPress and Akeeba Solo offer a unified web API which
    allows you to take, download and manage backups. The API is based on
    simple HTTP requests accepting and returning JSON-encoded messages. This
    API is called the <firstterm>Akeeba Backup JSON API</firstterm>.</para>

    <para>This documentation is the reference for communicating to our
    software using this API.</para>

    <para>For a real world implementation in PHP please take a look at <link
    xlink:href="https://github.com/akeeba/remotecli">Akeeba Remote Control
    CLI</link>. You can also run it with the <option>--verbose</option> switch
    to see the communications taking place between the client and the server.
    We believe this is the best interactive demonstration of the API
    implementation.</para>

    <para>If you are a PHP software developer who wants to make an integration
    with the Akeeba Backup JSON API you can take a look at <link
    xlink:href="https://github.com/akeeba/json-backup-api">the reference
    client library</link>.</para>
  </section>

  <section xml:id="intro-to-api-versions">
    <title>Introduction to API versions</title>

    <para>Historically, there have been four (4) versions of a remote API to
    Akeeba Backup.</para>

    <itemizedlist>
      <listitem>
        <para>XML-RPC Remote Backup API (APIv0). Retired. This was the
        original version of a remote API present in JoomlaPack (the precursor
        to Akeeba Backup), using XML-RPC instead of JSON. This API is NOT
        referenced in this documentation.</para>
      </listitem>

      <listitem>
        <para>APIv1. Retired. This was the oldest version of the Akeeba Backup
        JSON API, used between 2011 and 2023.</para>
      </listitem>

      <listitem>
        <para>APIv2. Mature. This is the current and recommended version of
        the Akeeba Backup JSON API. It is supported by all our backup
        products: Akeeba Backup for Joomla!, Akeeba Backup for WordPress, and
        Akeeba Solo. It was released in March 2020 and there is no sunset date
        for it set yet.</para>
      </listitem>

      <listitem>
        <para>APIv3. Emerging. Currently only implemented by Akeeba Backup for
        Joomla! versions 9.6.0 and later. There is no date set yet for this
        API version entering full production use.</para>
      </listitem>
    </itemizedlist>

    <para>We expect APIv3 to be implemented across all our products by Q4
    2025, and replace APIv2 by Q4 2027. These dates are currently
    tentative.</para>
  </section>

  <section xml:id="client-library">
    <title>The API client library</title>

    <para>Writing an integration with a third party API is painful and
    invariably complicated. You have to understand the mindset and goals of
    the person designing the API, figure out its quirks, and write code which
    not only integrates with the API, but also does error handling and
    whatnot.</para>

    <para>We strongly believe in Free and Open Source Software both for its
    technical superiority, and for its educational value. Therefore, if you
    are building a PHP-based Free and Open Source Software solution which
    needs to integrate with Akeeba Backup and Akeeba Solo we strongly
    encourage you to use our <link
    xlink:href="https://packagist.org/packages/akeeba/json-backup-api">akeeba/json-backup-api
    client library package</link> through Composer.</para>

    <important>
      <para>The library package is licensed under the GNU Affero General
      Public License, version 3 of the license or, at your option, any later
      version (GNU-AGPL-3+). The GNU-AGPL-3+ license has a further restriction
      than the GNU General Public License (GNU-GPL-3+). If your software is
      accessible over a network, you must provide its source code to everyone
      who can access it over a network. If you are writing proprietary
      software, e.g. you are building a hosted service, and do not want this
      restriction we can sell you a proprietary license for the library.
      Pricing is determined according to the number of sites you expect to use
      this library with on a monthly basis, starting at €0.05 per site per
      month, with a minimum of 100 sites.</para>
    </important>

    <para>This library is the reference implementation of an Akeeba Backup
    JSON API client. This is what we use in Akeeba RemoteCLI (a CLI
    application to take backups remotely), Akeeba UNiTE (a CLI application to
    take backups remotely, and restore them unattended on a server), and
    Akeeba Panopticon (our self-hosted site monitoring software which can also
    take backups automatically).</para>

    <para>To use this package, you will need two or three things in your
    <filename>composer.json</filename> file:</para>

    <itemizedlist>
      <listitem>
        <para>The akeeba/json-backup-api package itself.</para>
      </listitem>

      <listitem>
        <para>A compatible HTTP request library. The library supports Guzzle,
        the Joomla Framework HTTP package, as well as any library which
        implements PSR-17 and PSR-18 such as PHP-HTTP, HTTPlug, and so
        on.</para>
      </listitem>

      <listitem>
        <para>Optionally, composer/ca-bundle unless you can provide your own
        TLS Certification Authority cache</para>
      </listitem>
    </itemizedlist>

    <para>Assuming that you use Guzzle and composer/ca-bundle you can create a
    high level Akeeba Backup API client in a few lines of code:</para>

    <programlisting>// Create an Options object which tells the library where and
// how to connect to the backup software
$options = new \Akeeba\BackupJsonApi\Options([
    'capath' =&gt; \Composer\CaBundle\CaBundle::getBundledCaBundlePath(),
    'ua'     =&gt; 'MyFancyApp/1.2.3',
    'host'   =&gt; 'example.com',
    'secret' =&gt; 'Sυρ3rC4l1Fr@gil15ti(E&gt;&lt;pial!d0ciou5',
]);
// Create an HTTP client object. Here, we are using one that
// makes use of Guzzle 7.
$httpClient = new \Akeeba\BackupJsonApi\HttpAbstraction\HttpClientGuzzle($options);
// Get the API client itself. 
$apiClient = new \Akeeba\BackupJsonApi\Connector($httpClient);</programlisting>

    <para>You can then use the high-level API client object to perform any
    operation supported. For example, taking a backup is a piece of
    cake:</para>

    <programlisting>$backupOptions = new \Akeeba\BackupJsonApi\DataShape\BackupOptions([
    'profile' =&gt; 5,
    'description' =&gt; 'Remote backup using the API client',
    'comment' =&gt; 'Look, mum! I can take backups without logging into the site!'
]);
$apiClient-&gt;backup($backupOptions, function ($data) {
    echo "Received backup tick\n";
    echo sprintf("Domain   : %s\n", $data-&gt;Domain);
    echo sprintf("Step     : %s\n", $data-&gt;Step);
    echo sprintf("Substep  : %s\n", $data-&gt;Substep);
    echo sprintf("Progress : %0.2f%%\n", $data-&gt;Progress);

    if (!empty($data-&gt;Warnings))
    {
        echo "Warnings\n========\n";

        foreach ($data-&gt;Warnings as $warning)
        {
            echo $warning . "\n";
        }
    }

    if (!$data-&gt;HasRun &amp;&amp; empty($data-&gt;Error))
    {
        echo "The backup finished successfully.\n";
    }
    elseif (!empty($data-&gt;Error))
    {
        echo "The backup finished with an error:\n{$data-&gt;Error}\n";
    }
});</programlisting>

    <para>For all available high-level API calls look at <link
    xlink:href="https://github.com/akeeba/json-backup-api/tree/main/src/HighLevel">https://github.com/akeeba/json-backup-api/tree/main/src/HighLevel</link>.
    The method call is the same as the name of the invokable class in that
    folder. The parameters of each method are those of the magic
    <code>__invoke</code> method of the class. For example, to get the
    information of the backup software you can just do:</para>

    <programlisting>$info = $apiClient-&gt;information();</programlisting>

    <para>The available methods are also present as phpDocumentor
    <code>@method</code> tags in the
    <classname>\Akeeba\BackupJsonApi\Connector</classname> class. Most IDEs
    such as phpStorm, Visual Studio Code etc use this information to provide
    code auto-completion for the high level API object (the
    <code>$apiClient</code> in our example). This will greatly help you use
    the library.</para>

    <para>The data returned by each high-level API object method is what is
    documented for the corresponding JSON API method. If you don't know which
    JSON API method corresponds to each method, look for the
    <code>doQuery()</code> calls in the same-named class under the
    <methodname>\Akeeba\BackupJsonApi\HighLevel</methodname> namespace. The
    first argument to the <code>doQuery()</code> method is the Akeeba Backup
    JSON API method.</para>
  </section>

  <section xml:id="endpoints">
    <title>API endpoints</title>

    <para>Historically, API endpoints have been provided in one of two
    ways:</para>

    <itemizedlist>
      <listitem>
        <para>As a URL specific to the Joomla! component.</para>
      </listitem>

      <listitem>
        <para>As a direct URL to an <filename>index.php</filename> or
        <filename>remote.php</filename> file in Akeeba Backup for WordPresas
        and Akeeba Solo.</para>
      </listitem>
    </itemizedlist>

    <para>The downside of this approach is that both Joomla! and WordPress may
    allow third party code to interfere with the handling of the URL, leading
    to unexpected breakage outside our control. Therefore, the following
    endpoint methods are now preferred, or in development:</para>

    <itemizedlist>
      <listitem>
        <para>Using a Joomla! API application endpoint URL</para>
      </listitem>

      <listitem>
        <para>Using WordPress' admin-ajax.php endpoint</para>
      </listitem>

      <listitem>
        <para>Using WordPress' API application endpoint URL</para>
      </listitem>
    </itemizedlist>

    <para>While third party code still runs under these contexts, it's less
    likely that it will interfere.</para>

    <para>The <emphasis role="bold">APIv1</emphasis> endpoints are as
    follows:</para>

    <warning>
      <para>APIv1 is retired and <emphasis role="bold">MUST NOT</emphasis> be
      used.</para>

      <para>Please note that some versions of our software may respond to an
      APIv1 endpoint only to return an error either telling you that you need
      to use APIv2, or telling you that the product has expired. In this case,
      you <emphasis role="bold">MUST</emphasis> try APIv2 instead.</para>
    </warning>

    <itemizedlist>
      <listitem>
        <para>Akeeba Backup for Joomla! versions 3.3.0 to 8.3.x with the
        endpoint
        <uri>https://www.example.com/index.php?option=com_akeeba&amp;view=json&amp;format=raw</uri></para>
      </listitem>

      <listitem>
        <para>Akeeba Backup for WordPress versions 1.0.0 to 7.x with the
        endpoint
        <uri>https://www.example.com/wp-content/plugins/akeeabackupwp/app/index.php?option=com_akeeba&amp;view=json&amp;format=raw</uri></para>
      </listitem>

      <listitem>
        <para>Akeeba Backup for WordPress versions 7.4.0 and later 7.x
        versions with the endpoint
        <uri>https://www.example.com/wp-content/plugins/akeeabackupwp/app/index.php?option=com_akeeba&amp;view=api&amp;format=raw</uri></para>
      </listitem>

      <listitem>
        <para>Akeeba Solo versions 1.0.0 to 7.x versions with the endpoint
        <uri>https://www.example.com/index.php?option=com_akeeba&amp;view=json&amp;format=raw</uri></para>
      </listitem>

      <listitem>
        <para>Akeeba Solo versions 2.4.1 to 7.x versions with the endpoint
        <uri>https://www.example.com/remote.php?option=com_akeeba&amp;view=json&amp;format=raw</uri></para>
      </listitem>
    </itemizedlist>

    <para>The <emphasis role="bold">APIv2</emphasis> endpoints are as
    follows:</para>

    <itemizedlist>
      <listitem>
        <para>Akeeba Backup for Joomla! versions 7.5.x to 8.x with the
        endpoint
        <uri>https://www.example.com/index.php?option=com_akeeba&amp;view=api&amp;format=raw</uri></para>
      </listitem>

      <listitem>
        <para>Akeeba Backup for Joomla! versions 9.x and later with the
        endpoint
        <uri>https://www.example.com/index.php?option=com_akeebabackup&amp;view=api&amp;format=raw</uri></para>
      </listitem>

      <listitem>
        <para>Akeeba Backup for Joomla! versions 9.6.0 and later with the
        endpoint
        <uri>https://www.example.com/api/index.php/v2/akeebabackup</uri> which
        uses the Joomla! API application.</para>

        <note>
          <para>This endpoint requires that the Web Services - Akeeba Backup
          plugin is published on the site.</para>
        </note>
      </listitem>

      <listitem>
        <para>Akeeba Backup for WordPress versions 7.4.0 and later 7.x
        versions with the endpoint
        <uri>https://www.example.com/wp-content/plugins/akeeabackupwp/app/index.php?option=com_akeeba&amp;view=api&amp;format=raw</uri></para>
      </listitem>

      <listitem>
        <para>Akeeba Backup for WordPress versions 7.7.1 to 8.x with the
        endpoint
        <uri>https://www.example.com/wp-admin/admin-ajax.php?action=akeebabackup_api&amp;option=com_akeeba&amp;view=api&amp;format=raw</uri></para>
      </listitem>

      <listitem>
        <para>Akeeba Solo versions 7.4.0 to 8.x with the endpoint
        <uri>https://www.example.com/index.php?option=com_akeeba&amp;view=api&amp;format=raw</uri></para>
      </listitem>
    </itemizedlist>

    <para>The <emphasis role="bold">APIv3</emphasis> endpoints are as
    follows:</para>

    <important>
      <para>APIv3 is still in emergent state. You should not use it in
      production just yet.</para>
    </important>

    <itemizedlist>
      <listitem>
        <para>Akeeba Backup for Joomla! versions 9.6.0 and later with the
        endpoint
        <uri>https://www.example.com/api/index.php/v3/akeebabackup</uri> which
        uses the Joomla! API application.</para>

        <note>
          <para>This endpoint requires that the Web Services - Akeeba Backup
          plugin is published on the site.</para>
        </note>
      </listitem>
    </itemizedlist>

    <bridgehead>APIv1 is retired (obsolete)</bridgehead>

    <para>The APIv1 has been retired and superseded by APIv2 in all
    products.</para>

    <para>Moreover, <emphasis role="bold">APIv1 will no longer work on Akeeba
    Backup for Joomla! after December 2023</emphasis>. This change was
    announced in December 2019 with an original sunset date of API v1 set to
    December 2020. Due to the COVID-19 pandemic we extended the sunset date,
    but now the time has finally come.</para>

    <bridgehead>Auto-detection strategy</bridgehead>

    <para>When you need to detect the API endpoint and version to use on a
    site, we suggest that you use the following strategy.</para>

    <para>Check for products in the following order: Akeeba Backup 9.x using
    the Joomla! API endpoint (APIv2, Akeeba Backup 9.6.0 or later), Akeeba
    Backup for WordPress, Akeeba Solo.</para>

    <para>Check for APIv2 endpoints <emphasis role="bold">BEFORE</emphasis>
    APIv1 endpoints. Newer versions of some products implement APIv1 endpoints
    only to return an error informing you that you should not be using APIv1.
    Other products used to support APIv1 but they return an error message
    since December 2023 letting you know that it has expired.</para>

    <para>When iterating through endpoints, always look for the <emphasis
    role="bold">newer</emphasis> endpoints before the older endpoints.</para>

    <bridgehead>API and endpoint deprecation policy</bridgehead>

    <para>Whenever we deprecate an API version we will provide a reasonable
    period of time (no less than 6 months and no more than 12 months) where
    both API versions will be supported by the same product simultaneously.
    This will be followed by a short period of time (no less than 3 months and
    no more than 6 months) where the old API version returns an error, letting
    you know you should use the newer API version. After that time the old API
    version's endpoint will be retired and its behaviour becomes
    unpredictable.</para>

    <para>Whenever we introduce a new API endpoint <emphasis>within the same
    API version</emphasis> we will provide a reasonable period of time (no
    less than 6 months and no more than 12 months) where both API endpoints
    will be supported by the same product simultaneously. After that time the
    old endpoint will be retired and its behaviour becomes
    unpredictable.</para>
  </section>

  <section xml:id="apiv1">
    <title>APIv1 reference</title>

    <warning>
      <para>APIv1 has been retired. This content serves as a historical
      reminder only.</para>
    </warning>

    <para>APIv1 was designed back in the late '00s when HTTPS was a rare and
    expensive commodity. TLS certificates cost a lot of money, and hosting
    companies usually charged extra for a dedicated IP address to serve your
    HTTPS site. Since running an API over plain HTTP was problematic, we had
    designed APIv1 with its own encryption layer. This layer was removed in
    2014 when Padding Oracle attacks against it became practical.</para>

    <para>Due to these historical reasons, version 1 requires that you
    <emphasis>encapsulate</emphasis> the data you send to the server and
    specifies that the returned data will also be returned encapsulated. Since
    the encryption layer was removed, the encapsulation essentially means that
    the actual data is passed as a string inside another, outer, JSON
    message.</para>

    <para>For example, if you want to pass the message:</para>

    <programlisting>{
  foo: "bar"
}</programlisting>

    <para>You would need to encapsulate it like this:</para>

    <programlisting>{
  encapsulation: 1,
  body: {
    challenge: "foo:3858f62230ac3c915f300c664312c63f",
    method: "example",
    data: "{foo:\"bar\"}"
  }
}</programlisting>

    <note>
      <para>Historical note: Between 2011 and 2014, this allowed the data
      string (body.data) to be encrypted using AES. This was a misguided
      attempt to use encryption for authentication (which is a bad idea due to
      attacks against the encryption algorithm) and also as a way to work
      around the fact that the majority of sites back in early 2011 didn't use
      HTTPS, as noted above.</para>

      <para>Fast forward to 2019, when we started working on Akeeba Backup 7.
      It was pretty clear that using encryption for authentication was a
      liability, not an asset. Moreover, most sites would now use HTTPS since
      the cost of SSL/TLS certificates had dropped to zero thanks to the free
      of charge certification authority <orgname>Let's
      Encrypt</orgname>.</para>

      <para>Therefore the decision was made to drop all encapsulations except
      for RAW from Akeeba Backup 7. This documentation has been updated to
      reflect this change.</para>
    </note>

    <section xml:id="apiv1-client">
      <title>Client-side</title>

      <warning>
        <para>APIv1 has been retired. This content serves as a historical
        reminder only.</para>
      </warning>

      <para>The client is sending its requests to the server over a standard
      HTTP GET operation to the endpoint URI of the component. An end-point
      URI looks like
      <uri>http://<replaceable>www.example.com</replaceable>/index.php?option=com_akeeba&amp;view=json&amp;format=raw&amp;json=<replaceable>&lt;data&gt;</replaceable></uri>.
      It goes without saying, www.example.com is to be replaced by the
      <abbrev>FQDN</abbrev> of the site where Akeeba Backup is installed. The
      &lt;data&gt; part of the URI is the JSON-encoded Request Object.</para>

      <note>
        <para>API endpoints for Akeeba Backup for WordPress and Akeeba Solo
        are different than the one illustrated above. Please consult the
        Schedule Automatic Backups page of each software to learn about the
        API endpoints.</para>
      </note>

      <para><emphasis role="bold">Exceptions to the GET rule</emphasis>: Some
      request methods may require you to use POST instead of GET. Such
      exceptions will be documented in the respective method.</para>

      <para><emphasis role="bold">Alternative endpoint URL</emphasis>: Since
      API level 319 you can substitute format=raw with format=component. This
      increases the compatibility with poorly written third party Joomla!
      system plugins and we strongly recommend always using that.</para>

      <section xml:id="apiv1-client-request">
        <title>The Request Object</title>

        <warning>
          <para>APIv1 has been retired. This content serves as a historical
          reminder only.</para>
        </warning>

        <para>The Request Object is a JSON object with the following
        fields:</para>

        <variablelist>
          <varlistentry>
            <term>encapsulation</term>

            <listitem>
              <para>An Encapsulation Identifier constant (integer), defining
              the encapsulation method of the body</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>body</term>

            <listitem>
              <para>A JSON string representing the Request Body, encoded in
              the specified encapsulation</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>

      <section xml:id="apiv1-client-body">
        <title>The Request Body</title>

        <warning>
          <para>APIv1 has been retired. This content serves as a historical
          reminder only.</para>
        </warning>

        <para>The Request Body is a JSON object with the following
        fields:</para>

        <variablelist>
          <varlistentry>
            <term>challenge</term>

            <listitem>
              <para>This field consists of a salt string and an MD5 hash,
              separated by a colon, like this: <code>salt:md5</code>. The salt
              can be an arbitrary length alphanumeric string. The md5 part of
              the challenge is the result of the MD5 hash of the concatenated
              string of the salt and the Akeeba Backup front-end secret key,
              as configured in the component's Options. For example, if the
              salt is foo and the secret key is bar, the md5 is md5(foobar) =
              3858f62230ac3c915f300c664312c63f, therefore the challenge is
              <code>foo:3858f62230ac3c915f300c664312c63f</code>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>method</term>

            <listitem>
              <para>The name of the method you want the server to
              execute</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>data</term>

            <listitem>
              <para>A JSON object containing the parameters to be passed to
              the method.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>

    <section xml:id="apiv1-server">
      <title>Server-side</title>

      <warning>
        <para>APIv1 has been retired. This content serves as a historical
        reminder only.</para>
      </warning>

      <para>When the server receives a request and processed it, it will reply
      with a Response Object.</para>

      <para>As of version 7 of our software the encapsulation of the Response
      Object will always be RAW.</para>

      <section xml:id="apiv1-server-response">
        <title>The Response Object</title>

        <warning>
          <para>APIv1 has been retired. This content serves as a historical
          reminder only.</para>
        </warning>

        <para>The server's response comes as a JSON-encoded Response
        Object.</para>

        <warning>
          <para>The JSON string is prefixed and suffixed with a triple hash
          mark (###). The client program must throw away anything before and
          including the first occurrence of the triple has mark, as well as
          anything after and including the last occurrence of the triple hash
          mark. This is done for compatibility reasons, as some servers inject
          PHP warnings, or mistakenly serve their output as a full HTML page
          instead of the requested raw JSON format.</para>
        </warning>

        <para>The Response Object contains the following fields:</para>

        <variablelist>
          <varlistentry>
            <term>encapsulation</term>

            <listitem>
              <para>The encapsulation the server decided to use for its
              response. This should always be 1 i.e. the RAW
              encapsulation.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>body</term>

            <listitem>
              <para>An object containing the following fields:</para>

              <variablelist>
                <varlistentry>
                  <term>status</term>

                  <listitem>
                    <para>The status of the request</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>data</term>

                  <listitem>
                    <para>The JSON-encoded Response Data, in the specified
                    encapsulation</para>
                  </listitem>
                </varlistentry>
              </variablelist>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>When the status is anything other than 200, the data is an
        encapsulated and JSON-encoded string containing more information about
        the error condition which occurred. If the status is 200, please refer
        to the Methods Reference for the expected response data.</para>
      </section>
    </section>
  </section>

  <section xml:id="apiv2">
    <title>APIv2 reference</title>

    <para>The APIv2 is a simple JSON API.</para>

    <para>You can access the API using the HTTP verbs GET or POST against the
    endpoint URL. It does not matter which verb you use; it's not a RESTful
    API.</para>

    <bridgehead>Authentication</bridgehead>

    <para>Authentication takes place by sending a secret to the endpoint. The
    secret is defined in the <guilabel>Secret word</guilabel> field of Akeeba
    Backup for Joomla!'s component Options page, or the System Configuration
    page of Akeeba Backup for WordPress and Akeeba Solo under the
    <guilabel>Front-end</guilabel> tab.</para>

    <para>You can pass the authentication secret in two ways:</para>

    <itemizedlist>
      <listitem>
        <para>The HTTP header X-Akeeba-Auth, e.g. <code>X-Akeeba-Auth:
        My$up3r5eCr3+KeY</code></para>
      </listitem>

      <listitem>
        <para>As the GET or POST parameter _akeebaAuth, e.g.
        <code>_akeebaAuth=My%24up3r5eCr3%2BKeY</code></para>
      </listitem>
    </itemizedlist>

    <bridgehead>Request data format</bridgehead>

    <para>You specify the API method to call by sending the POST or GET
    parameter <code>method</code>, e.g.
    <code>method=startBackup</code>.</para>

    <para>Please note when you use the HTTP GET verb to access the API the
    method parameter must be a GET parameter. Likewise, when using the HTTP
    POST verb, the method parameter must be a POST parameter as well.</para>

    <para>Methods which accept data must be provided this data as GET or POST
    parameters. Again, if you use the GET HTTP verb you must send all data as
    GET (URL) parameters. If you use HTTP POST you need to send all of your
    data as POST parameters. When using POST you MUST use form encoding, NOT
    multipart encoding.</para>

    <bridgehead>Return data format</bridgehead>

    <para>You are returned a simple JSON object with the following
    format:</para>

    <programlisting>{
  'status': 200,
  'data': ...
}</programlisting>

    <para>The <code>data</code> key contains a JSON value or object as
    described in each method's documentation.</para>

    <para>When an error occurs you receive a similar object, with a status
    that is not 200. For example:</para>

    <programlisting>{
  'status': 500,
  'data': "The Gremlins ate my dinner!"
}</programlisting>

    <para>The <code>data</code> key in this case contains a string that is the
    error message. The explanation of error codes can be found in the
    constants reference.</para>
  </section>

  <section xml:id="apiv3">
    <title>APIv3 reference</title>

    <note>
      <para>APIv3 is in emergent state. You should experiment with it, but not
      use it in production.</para>
    </note>

    <para>APIv3 extends the native API applications of Joomla! and WordPress
    to provide API endpoints for Akeeba Backup, using the native API calling
    conventions of each CMS. Generally speaking, APIv3 is designed so that
    upgrading to it from APIv2 will inflict the least amount of pain for the
    integrator, unlike the APIv0 to APIv1, and the APIv1 to APIv2
    migrations.</para>

    <para>Like APIv1 and APIv2, you can use either GET or POST to call each
    method. The HTTP verb does not matter. This is a deliberate decision; if
    there are redirections involved in accessing a site the non-GET requests
    may fail (since the POST data part of the request is cleared). To prevent
    that issue and let users take backups reliably we decided to treat GET and
    POST as one and the same.</para>

    <para>Specifying a method is done by appending the method name to the
    endpoint URL, e.g.
    <uri>https://www.example.com/api/index.php/v3/akeebabackup/startBackup</uri>
    to start a backup on Joomla!.</para>

    <para>The authentication method, sending data to the API methods, the
    encapsulation of return data, and error reporting is left to the API
    application implementation of the corresponding CMS. Please note that each
    CMS may impose different requirements on the requests. For example,
    Joomla! requires you to send an <code>Accept: application/json</code>
    header.</para>
  </section>

  <section xml:id="constants">
    <title>Constants Reference</title>

    <section xml:id="constants-encapsulation">
      <title>APIv1 Encapsulation Identifiers</title>

      <warning>
        <para>APIv1 has been retired. This content serves as a historical
        reminder only.</para>
      </warning>

      <para>The predefined encapsulation identifiers are:</para>

      <variablelist>
        <varlistentry>
          <term>1</term>

          <listitem>
            <para>ENCAPSULATION_RAW. The JSON-encoded body is represented as
            plain text (no encryption)</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>The only encapsulation you should use and expect to receive is
      1.</para>
    </section>

    <section xml:id="constants-status">
      <title>Status identifiers</title>

      <variablelist>
        <varlistentry>
          <term>200</term>

          <listitem>
            <para>Normal reply. Your request was successful.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>401</term>

          <listitem>
            <para>Invalid credentials. The challenge you provided failed to
            validate. Check your secret key.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>403</term>

          <listitem>
            <para>Inadequate privileges. The system administrator doesn't
            allow the requested action to be performed over the JSON API
            (reserved status code for future use).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>404</term>

          <listitem>
            <para>Requested resource not found. This can imply that the backup
            record ID or the file you requested to download is not present in
            the system.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>405</term>

          <listitem>
            <para>Unknown JSON method. The JSON method you requested is not
            known to the API server. Check for typos or whether you're using
            an obsolete method that has already been removed.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>500</term>

          <listitem>
            <para>An error occurred. An unspecified error occurred while
            processing your request. More information will be provided in the
            data part of the response.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>501</term>

          <listitem>
            <para>Not implemented. The method you requested is known but
            currently not implemented by the server. You can expect to see
            that code for deprecated methods before they are completely
            removed.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>503</term>

          <listitem>
            <para>Remote service not activated. The system administrator has
            not activated the Akeeba Backup JSON API feature.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section>
    <title>Methods Reference</title>

    <section>
      <title>getVersion</title>

      <para>Returns the version number of the API and the component.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>None. The request data body is null.</para>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <variablelist>
        <varlistentry>
          <term>api</term>

          <listitem>
            <para>Integer. The API level this server understands.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>component</term>

          <listitem>
            <para>String. The exact version of the component, e.g. "3.1" for
            Akeeba Backup 3.1 stable.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>date</term>

          <listitem>
            <para>String. The release date of the component in YYYY-MM-DD
            format, e.g. "2010-07-21" for July 21st, 2010.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>edition</term>

          <listitem>
            <para>String. If we have Akeeba Backup Professional it returns
            "pro", otherwise "core". Since API level 320.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>getProfiles</title>

      <para>Returns a list of the backup profiles.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>None. The request data body is null.</para>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A list of objects. Each object has the following format:</para>

      <variablelist>
        <varlistentry>
          <term>id</term>

          <listitem>
            <para>The numeric profile ID used in all other API calls.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>name</term>

          <listitem>
            <para>The human-readable name of the profile, as set by the user
            in Akeeba Backup's back-end.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>startBackup</title>

      <para>Begins a backup job. You must run it before stepBackup.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All the fields are optional. You can have a null data body.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. Default = 1. The numeric profile ID to use for this
            backup job.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>description</term>

          <listitem>
            <para>String. Default = Backup taken on &lt;date&gt; &lt;time&gt;.
            The short description to list in the Manage Backups (formerly
            "Administer Backup Files") page.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>comment</term>

          <listitem>
            <para>String. Default = Empty string. A longer comment to include
            in the Manage Backups (formerly "Administer Backup Files") listing
            for this backup record.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>tag</term>

          <listitem>
            <para>String. Default = json. Do not use this option! This is
            reserved for future use.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>overrides</term>

          <listitem>
            <para>Array. Configuration variable overrides. Available since API
            version 335.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A simple JSON object:</para>

      <variablelist>
        <varlistentry>
          <term>HasRun</term>

          <listitem>
            <para>Boolean. When true, more steps are required to backup the
            site (unless Error is not empty). When false, the backup has just
            finished.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Domain</term>

          <listitem>
            <para>String. The backup domain. It can be one of "init',
            'installer', 'db', 'pack', 'finalization'. It tells you which
            major step the backup is in, i.e. 'db' for database backup.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Step</term>

          <listitem>
            <para>String. Free text describing the last operation in the
            current domain, e.g. the name of the last folder backed up. You
            should only use it for verbose progress display.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Substep</term>

          <listitem>
            <para>String. Free text, giving more detail about the Step. You
            should only use it for verbose progress display.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Error</term>

          <listitem>
            <para>String. The last error occurred. If this is not an empty
            string or null, you can assume that the backup has failed,
            irrespectively of the HasRun value.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Warnings</term>

          <listitem>
            <para>Array of Strings. The warnings produced during the last
            step. You'd better display them to the user.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>BackupID</term>

          <listitem>
            <para>Integer. The numeric ID of the backup record being created.
            Since API 340.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Archive</term>

          <listitem>
            <para>String. The name of the backup archive. You will only get
            this in one of the responses of startBackup or stepBackup, when
            the archive is first created. In all other responses it will be
            empty. Only use the non-empty response. Since API 340.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Progress</term>

          <listitem>
            <para>Integer. The percentage of the backup process completion
            (0-100). Since API 340.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>backupid</term>

          <listitem>
            <para>String. The unique identifier of this backup. You need to
            pass this in all subsequent calls to stepBackup. Since API
            340.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>sleepTime</term>

          <listitem>
            <para>Integer. How many milliseconds you should wait before you
            run the next stepBackup. Since API 340.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>stepNumber</term>

          <listitem>
            <para>Integer. The sequential number of this step. Step numbers
            returned by stepBackup must be sequentially numbered,
            monotonically increasing. Anything else indicates a misbehaving
            server / broken backup. Since API 340.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>stepState</term>

          <listitem>
            <para>String. The run state of the engine. It can be one of error,
            init, prepared, running, postrun and finished. This is debugging
            information about the engine internals and you should not act upon
            it. Since API 340.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>startSRPBackup</title>

      <para>Obsolete. This method is no longer available.</para>
    </section>

    <section>
      <title>stepBackup</title>

      <para>Continues a backup job started with startBackup</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>The backupid field is recommended since API 335 and <emphasis
      role="bold">mandatory</emphasis> since API 340. If you do not pass the
      backupid the backup will most likely fail.</para>

      <variablelist>
        <varlistentry>
          <term>tag</term>

          <listitem>
            <para>String. Optional. Default = json. Do not use this option!
            This is reserved for future use.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>backupid</term>

          <listitem>
            <para>String. MANDATORY. The unique identifier of this backup, as
            returned by the previous call to startBackup or stepBackup.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <variablelist>
        <varlistentry>
          <term>HasRun</term>

          <listitem>
            <para>Boolean. When true, more steps are required to backup the
            site (unless Error is not empty). When false, the backup has just
            finished.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Domain</term>

          <listitem>
            <para>String. The backup domain. It can be one of "init',
            'installer', 'db', 'pack', 'finalization'. It tells you which
            major step the backup is in, i.e. 'db' for database backup.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Step</term>

          <listitem>
            <para>String. Free text describing the last operation in the
            current domain, e.g. the name of the last folder backed up. You
            should only use it for verbose progress display.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Substep</term>

          <listitem>
            <para>String. Free text, giving more detail about the Step. You
            should only use it for verbose progress display.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Error</term>

          <listitem>
            <para>String. The last error occurred. If this is not an empty
            string or null, you can assume that the backup has failed,
            irrespectively of the HasRun value.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Warnings</term>

          <listitem>
            <para>Array of Strings. The warnings produced during the last
            step. You'd better display them to the user.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Archive</term>

          <listitem>
            <para>String. The name of the backup archive. You will only get
            this in one of the responses of startBackup or stepBackup, when
            the archive is first created. In all other responses it will be
            empty. Only use the non-empty response. Since API 340.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Progress</term>

          <listitem>
            <para>Integer. The percentage of the backup process completion
            (0-100). Since API 340.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>backupid</term>

          <listitem>
            <para>String. The unique identifier of this backup. You need to
            pass this in all subsequent calls to stepBackup. Since API
            340.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>sleepTime</term>

          <listitem>
            <para>Integer. How many milliseconds you should wait before you
            run the next stepBackup. Since API 340.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>stepNumber</term>

          <listitem>
            <para>Integer. The sequential number of this step. Step numbers
            returned by stepBackup must be sequentially numbered,
            monotonically increasing. Anything else indicates a misbehaving
            server / broken backup. Since API 340.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>stepState</term>

          <listitem>
            <para>String. The run state of the engine. It can be one of error,
            init, prepared, running, postrun and finished. This is debugging
            information about the engine internals and you should not act upon
            it. Since API 340.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>listBackups</title>

      <para>Returns a (partial) list of the backup records known to the
      component. The records are presented in reverse order, i.e. the first
      record is the last backup attempt, whereas the last record is the
      earliest backup attempt known to the component.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are optional. You can have a null data body.</para>

      <variablelist>
        <varlistentry>
          <term>from</term>

          <listitem>
            <para>Integer. Default = 0. The starting offset of the list, maps
            to the limitstart parameter in the Joomla! API.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>limit</term>

          <listitem>
            <para>Integer. Default = 50. How many records to return at once,
            maps to the limit parameter in the Joomla! API. You can set it to
            0 to return all records, but do note that this may cause a server
            timeout.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A list of JSON objects. Each object has the following
      format:</para>

      <variablelist>
        <varlistentry>
          <term>id</term>

          <listitem>
            <para>Integer. The numeric ID of the backup record, used whenever
            you want to fetch files, delete files, etc.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>description</term>

          <listitem>
            <para>String. The short backup description.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>comment</term>

          <listitem>
            <para>String. The longer backup comment. Expect it to contain
            HTML.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>backupstart</term>

          <listitem>
            <para>String. A MySQL timestamp of the time the backup started,
            e.g. "2010-07-21 16:30:00".</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>backupend</term>

          <listitem>
            <para>String. A MySQL timestamp of the time the backup finished,
            e.g. "2010-07-21 16:30:00".</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>status</term>

          <listitem>
            <para>String. The status of this backup run. Can be one of:</para>

            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">run</emphasis> The backup is still
                running, or it's stuck</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">fail</emphasis> The backup has
                failed</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">complete</emphasis> The backup has
                run successfully</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>origin</term>

          <listitem>
            <para>String. The backup origin. Indicates where the backup was
            started from. This list continues to expand and now consists
            of:</para>

            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">backend</emphasis> A back-end
                manual backup</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">frontend</emphasis> A front-end
                backup, using the redirects API</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">cli</emphasis> A native command
                line backup using backup.php (probably in a CRON job)</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">lite</emphasis> A front-end manual
                backup using the Lite Mode</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">json</emphasis> A remote backup
                using the JSON API</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">xmlrpc</emphasis> A remote backup
                using the XML-RPC API</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>type</term>

          <listitem>
            <para>String. The backup mode used in that backup. Can be one
            of:</para>

            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">full</emphasis> Full backup
                (default)</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">dbonly</emphasis> Main site
                database only backup to SQL files</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">extradbonly</emphasis> Extra
                Databases only backup</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">alldb</emphasis> All databases
                (main site and any extra databases) backup</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">fileonly</emphasis> Files only
                backup, non-incremental</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">incfile</emphasis> Files only
                backup, incremental</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>profile_id</term>

          <listitem>
            <para>Integer. The numeric Backup Profile ID</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>archivename</term>

          <listitem>
            <para>String. The base name of the archive and its extension, e.g.
            foobar.jpa</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>absolute_path</term>

          <listitem>
            <para>String. The full absolute file system path to the archive
            file, e.g. /home/myuser/public_html/backups/foobar.jpa.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>multipart</term>

          <listitem>
            <para>Integer. The number of archive parts of this backup. 0 and 1
            both mean only 1 part is present.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>tag</term>

          <listitem>
            <para>Reserved for future use.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>filesexist</term>

          <listitem>
            <para>Integer. Non-zero values mean that the archive files are
            still present in the server. A zero value means that the files no
            longer exist on the server.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>meta</term>

          <listitem>
            <para>String. The combination of status and filesexist
            fields:</para>

            <itemizedlist>
              <listitem>
                <para><emphasis role="bold">ok</emphasis> A successful backup
                whose files exist on the server</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">obsolete</emphasis> A successful
                backup whose files no longer exist on the server</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">pending</emphasis> A backup still
                running, or stuck</para>
              </listitem>

              <listitem>
                <para><emphasis role="bold">fail</emphasis> A backup which
                failed</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>size</term>

          <listitem>
            <para>Integer. The total size of all archive parts. Do note that
            32-bit versions of PHP overflow past 2Gb. You can't rely on this
            field.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>getBackupInfo</title>

      <para>Gets detailed information about a specific backup record.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>backup_id</term>

          <listitem>
            <para>Integer. The numeric ID of the backup record you want more
            info about.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A simple JSON object, consisting of ALL the fields described in
      listBackups plus:</para>

      <variablelist>
        <varlistentry>
          <term>filenames</term>

          <listitem>
            <para>An array of objects. Each object has the following
            format:</para>

            <variablelist>
              <varlistentry>
                <term>part</term>

                <listitem>
                  <para>Integer. The part number (1 to
                  <varname>multipart</varname>)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>name</term>

                <listitem>
                  <para>String. The base filename of this part.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>size</term>

                <listitem>
                  <para>Integer. The part size in bytes.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>download</title>

      <para>Sends back a chunk of a backup archive file, maximum length of
      1Mb</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>backup_id</term>

          <listitem>
            <para>The numeric ID of the backup record whose files you want to
            download</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>part_id</term>

          <listitem>
            <para>The backup part you wish to download. For example, if we
            have a multi-part archive with the base name test.jpa and six
            parts (.j01 through .j05 and .jpa) then part_id=2 means that we
            want to download test.j02 and part_id=6 means that we want to
            download the last part, i.e. test.jpa. If the backup record is not
            a multi-part archive just use 1.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>segment</term>

          <listitem>
            <para>Each file is internally divided into 1Mb "segments". This
            parameter tells the JSON API which "segment" to download.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>As a rule of thumb, always start with part_id=1 and segment=1.
      Then, start incrementing the segment. When you get an "Error reading
      specified segment" error, increase the part number and start again with
      segment=1. When you get an "Error reading specified segment" error for
      the first segment of a given part, you are done reading the backup
      archive parts of this backup record.</para>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>You get base64-encoded raw binary data.</para>
    </section>

    <section>
      <title>downloadDirect</title>

      <para>Sends back a entire backup archive part as raw binary data stream,
      i.e. a regular file download</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>backup_id</term>

          <listitem>
            <para>The numeric ID of the backup record whose files you want to
            download</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>part_id</term>

          <listitem>
            <para>The backup part you wish to download. For example, if we
            have a multi-part archive with the base name test.jpa and six
            parts (.j01 through .j05 and .jpa) then part_id=2 means that we
            want to download test.j02 and part_id=6 means that we want to
            download the last part, i.e. test.jpa. If the backup record is not
            a multi-part archive just use 1.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>Unencrypted binary stream containing the raw file data. You will
      also receive standard HTTP headers setting the content disposition to
      Attachment, specifying an application/octet-stream MIME type and
      notifying you of the size of the download. In fact, you can generate a
      URL and pass it to any third party download tool (e.g. cURL, Wget) to
      download the archive part.</para>
    </section>

    <section>
      <title>delete</title>

      <para>Completely removes a backup record from the database. Unlike
      deleteFiles, it will delete the files corresponding to the given backup
      record and the backup record itself. The Akeeba Backup component will
      not be aware that the specified backup record ever existed.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>backup_id</term>

          <listitem>
            <para>The numeric backup record identifier to delete.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>Returns true on success</para>
    </section>

    <section>
      <title>deleteFiles</title>

      <para>Remove only the files corresponding to a given backup record, but
      not the backup record itself. The Akeeba Backup component will display
      this backup record marked as "obsolete"</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>backup_id</term>

          <listitem>
            <para>The numeric backup record identifier to delete.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>Returns true on success</para>
    </section>

    <section>
      <title>getLog</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Returns the contents of the log file associated with a given
      backup tag. A backup "tag" is an identifier which conventionally
      indicates the backup origin. The default tag for backups initiated by
      the JSON API is "remote".</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>tag</term>

          <listitem>
            <para>The backup tag</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>The contents of the log file, using the same data format as file
      downloads</para>
    </section>

    <section>
      <title>getGUIConfiguration</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Returns a JSON definition for the configuration page. Available
      since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile to get the configuration for. Default:
            1 (default backup profile)</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A JSON object with the configuration GUI definition and the
      configuration values.</para>
    </section>

    <section>
      <title>exportConfiguration</title>

      <para>Returns a hash table with the profile's description, engine
      configuration and filters configuration. You can use it to export
      profiles for use on the same or a different server. Available since API
      version 341.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile to get the configuration for. Default:
            1 (default backup profile)</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>An array with the profile information. The array keys are:</para>

      <variablelist>
        <varlistentry>
          <term>description</term>

          <listitem>
            <para>The description of the exported backup profile</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>configuration</term>

          <listitem>
            <para>The engine configuration information in INI format</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>filters</term>

          <listitem>
            <para>The filters configuration information in JSON format</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>importConfiguration</title>

      <para>Imports a hash table with the profile information either as a new
      profile or overwriting an existing profile. You can use it to import
      profiles you exported from the same or a different server. Available
      since API version 341.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile to save the configuration to. Default:
            0 (create a new backup profile)</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>data</term>

          <listitem>
            <para>Array. The exported data array (see exportConfiguration).
            The array must have all three keys defined by
            exportConfiguration.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>True on success.</para>
    </section>

    <section>
      <title>saveConfiguration</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Saves the configuration of a backup profile. Available since API
      version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you are saving to.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>engineconfig</term>

          <listitem>
            <para>An associative array with all the configuration keys you are
            saving. You can define a partial set of configuration keys to only
            update specific configuration keys.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>Boolean true or false indicating whether the saving was
      successful.</para>
    </section>

    <section>
      <title>saveProfile</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Updates or creates a backup profile. Available since API version
      340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you are saving to. Do not define it
            (or set to 0) to save into a new backup profile.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>source</term>

          <listitem>
            <para>Integer. The profile ID to copy all data from. Do not define
            it to read the data from the same profile as the one you're saving
            to.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>description</term>

          <listitem>
            <para>String. The profile title.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>quickicon</term>

          <listitem>
            <para>Integer. 1 to show a backup quickicon in the interface for
            this profile, 0 to hide it.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>When both profile and source are empty or zero a new, empty
      profile is created. In this case the description MUST be present.</para>

      <para>When profile is empty but source is not you are copying the source
      profile into a new profile (the engine and filter configuration is
      copied over).</para>

      <para>When profile is non empty but source is empty you are editing an
      existing profile. In this case you should specify description or
      quickicon for the operation to make any sense.</para>

      <para>When both the profile and source are non empty you are overwriting
      profile with the contents of the source profile.</para>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>Boolean true.</para>
    </section>

    <section>
      <title>deleteProfile</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Deletes a backup profile. Available since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you are deleting. Mandatory. Must be
            greater than 1.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>Boolean true.</para>
    </section>

    <section>
      <title>browse</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Returns the list of subdirectories and directory information for a
      requested folder. Used to implement directory browsers, e.g. for the
      output directory.</para>

      <para>Available since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>folder</term>

          <listitem>
            <para>String. The absolute folder to list. Empty to list the
            site's root.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>processfolder</term>

          <listitem>
            <para>Integer. 1 to process folder variables, e.g.
            [DEFAULT_OUTPUT], in the folder name.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A JSON object with the following keys:</para>

      <variablelist>
        <varlistentry>
          <term>folder</term>

          <listitem>
            <para>String. The path to the folder.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>folder_raw</term>

          <listitem>
            <para>String. The path to the folder before replacing folder
            variables.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>parent</term>

          <listitem>
            <para>String. The path to the folder's parent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>exists</term>

          <listitem>
            <para>Boolean. Does the folder really exist?</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>inRoot</term>

          <listitem>
            <para>Boolean. Is this folder under the site's root? False means
            that the folder is above the site's root.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>openbasedirRestricted</term>

          <listitem>
            <para>Boolean. Is this folder restricted by open_basedir?</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>writable</term>

          <listitem>
            <para>Boolean. Is the folder writable?</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>subfolders</term>

          <listitem>
            <para>Array of String. The names of the folder's subdirectories.
            Does NOT include the current (.) and parent (..) items.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>breadcrumbs</term>

          <listitem>
            <para>Array of Array. Breadcrumbs leading to the folder. Each
            breadcrumb has the following keys:</para>

            <variablelist>
              <varlistentry>
                <term>label</term>

                <listitem>
                  <para>The breadcrumb part to display (name of the breadcrumb
                  folder).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>folder</term>

                <listitem>
                  <para>The absolute path to the folder this breadcrumb points
                  to. You can use that as the folder argument in a follow-up
                  browse API call.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>getDBRoots</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Returns the database roots for the backup profile. Available since
      API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>An array of JSON objects is returned. Each object has the
      following keys:</para>

      <variablelist>
        <varlistentry>
          <term>value</term>

          <listitem>
            <para>The UUID of the database definition.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>text</term>

          <listitem>
            <para>The human readable database definition name in the form of
            host/database (e.g. localhost/example) or host:port/database (e.g.
            mysql.example.com:8306/example). The main database of the site
            always returns a localised string in the tune of "Main site
            database".</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>getDBFilters</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Returns a list of all the database entities and any exclusion
      filters applied to each one of them. Typically used to render a GUI for
      setting database filters. Available since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <variablelist>
        <varlistentry>
          <term>root</term>

          <listitem>
            <para>string. The UUID of the database root, default [SITEDB] (the
            main site database definition). See getDBRoots</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>An array of JSON objects is returned. Each object has the
      following keys:</para>

      <variablelist>
        <varlistentry>
          <term>node</term>

          <listitem>
            <para>The name of the database table, view, function, trigger or
            procedure on which the filter is applied.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>type</term>

          <listitem>
            <para>The filter type. <option>tabledata</option> for content
            exclusion (only the definition is backed up),
            <option>tables</option> for skipping both the definition and the
            data.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>getDBEntities</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Returns the database entities exclusion filters for the chosen
      backup profile. Available since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <variablelist>
        <varlistentry>
          <term>root</term>

          <listitem>
            <para>string. The UUID of the database root, default [SITEDB] (the
            main site database definition). See getDBRoots</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A JSON object is returned with the keys</para>

      <variablelist>
        <varlistentry>
          <term>root</term>

          <listitem>
            <para>The UUID of the database root.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>tables</term>

          <listitem>
            <para>A list of database entities. This is a JSON object. The
            property keys of the object are the database entity (table, view,
            function, trigger, procedure) names. The property values are JSON
            objects with the following keys:</para>

            <variablelist>
              <varlistentry>
                <term>type</term>

                <listitem>
                  <para>The type of the database entity. One of:</para>

                  <variablelist>
                    <varlistentry>
                      <term>table</term>

                      <listitem>
                        <para>Regular table</para>
                      </listitem>
                    </varlistentry>

                    <varlistentry>
                      <term>view</term>

                      <listitem>
                        <para>Regular VIEW</para>
                      </listitem>
                    </varlistentry>

                    <varlistentry>
                      <term>merge</term>

                      <listitem>
                        <para>Merge table (MySQL only, means MRG_MYISAM table
                        type)</para>
                      </listitem>
                    </varlistentry>

                    <varlistentry>
                      <term>temp</term>

                      <listitem>
                        <para>Temporary table. For MySQL that includes MEMORY,
                        EXAMPLE, BLACKHOLE and FEDERATED.</para>
                      </listitem>
                    </varlistentry>

                    <varlistentry>
                      <term>procedure</term>

                      <listitem>
                        <para>Database procedure.</para>
                      </listitem>
                    </varlistentry>

                    <varlistentry>
                      <term>function</term>

                      <listitem>
                        <para>Database function.</para>
                      </listitem>
                    </varlistentry>

                    <varlistentry>
                      <term>trigger</term>

                      <listitem>
                        <para>Database trigger</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>tables</term>

                <listitem>
                  <para>Is this table excluded? 0: No. 1: Yes. 2: Always
                  (excluded by a RegEx, conditional, algorithmic or
                  platform-specific filter).</para>

                  <note>
                    <para>In the Akeeba Backup / Solo interface these values
                    are rendered with the following color coding 0: white 1:
                    yellow 2: red.</para>
                  </note>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>tabledata</term>

                <listitem>
                  <para>Is the table data excluded? 0: No. 1: Yes. 2: Always
                  (not a regular table; or excluded by a RegEx, conditional,
                  algorithmic or platform-specific filter).</para>

                  <note>
                    <para>In the Akeeba Backup / Solo interface these values
                    are rendered with the following color coding 0: white 1:
                    yellow 2: red.</para>
                  </note>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>setDBFilter</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Sets or resets a database exclusion filter. Available since API
      version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <variablelist>
        <varlistentry>
          <term>root</term>

          <listitem>
            <para>string. The UUID of the database root, default [SITEDB] (the
            main site database definition). See getDBRoots</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>table</term>

          <listitem>
            <para>string. The name of the table for this filter. See
            getDBFilters.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>type</term>

          <listitem>
            <para>string. The filter type. See getDBFilters.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>status</term>

          <listitem>
            <para>int. 1 to set the filter, 0 to reset it.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A JSON object with the following keys:</para>

      <variablelist>
        <varlistentry>
          <term>success</term>

          <listitem>
            <para>Bool. True if the operation succeeded.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>newstate</term>

          <listitem>
            <para>Bool. The new state of the filter, true if the filter is
            enabled.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>getFSRoots</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Returns the filesystem roots for the backup profile. Available
      since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>An array of JSON objects is returned. Each object has the
      following keys:</para>

      <variablelist>
        <varlistentry>
          <term>value</term>

          <listitem>
            <para>The UUID of the filesystem root ([SITEROOT] means the site's
            root).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>text</term>

          <listitem>
            <para>The full filesystem path to this root.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>getFSFilters</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Returns the filesystem exclusion filters for the chosen backup
      profile. Available since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <variablelist>
        <varlistentry>
          <term>root</term>

          <listitem>
            <para>string. The UUID of the filesystem root, default [SITEROOT]
            (the main site database definition). See getFSRoots</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>An array of JSON objects is returned. Each object has the
      following keys:</para>

      <variablelist>
        <varlistentry>
          <term>node</term>

          <listitem>
            <para>The relative path to the file or directory database on which
            the filter is applied.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>type</term>

          <listitem>
            <para>The filter type:</para>

            <itemizedlist>
              <listitem>
                <para><option>directories</option>. Exclude this
                directory.</para>
              </listitem>

              <listitem>
                <para><option>skipdirs</option>. Exclude the subdirectories
                contained in this directory.</para>
              </listitem>

              <listitem>
                <para><option>skipfiles</option>. Exclude the files contained
                in this directory.</para>
              </listitem>

              <listitem>
                <para><option>files</option>. Exclude this file.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>getFSEntities</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Returns the filesystem entities (files and folders) exclusion
      filters for the chosen backup profile. Available since API version
      340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <variablelist>
        <varlistentry>
          <term>root</term>

          <listitem>
            <para>string. The UUID of the database root, default [SITEDB] (the
            main site database definition). See getDBRoots</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>subdirectory</term>

          <listitem>
            <para>string. The relative path to the subdirectory you are
            listing. The path is relative to the root specified above. The
            subdirectory components MUST be separated with forward slashes and
            MUST NOT begin or end with a forward slash.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A JSON object is returned with the keys</para>

      <variablelist>
        <varlistentry>
          <term>root</term>

          <listitem>
            <para>The UUID of the database root.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>crumbs</term>

          <listitem>
            <para>An array of folder names leading from the root to the
            current subdirectory</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>folders</term>

          <listitem>
            <para>A JSON object. The property keys are folder names. The
            property values are JSON objects with the following format:</para>

            <variablelist>
              <varlistentry>
                <term>directories</term>

                <listitem>
                  <para>Is this entire directory and all of its contents to be
                  excluded? 0 = No. 1 = Yes. 2 = Always (excluded by an
                  algorithmic, platform-specific or regular expression
                  filter)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>skipfiles</term>

                <listitem>
                  <para>Are the files contained in this directory to be
                  excluded? 0 = No. 1 = Yes. 2 = Always (excluded by an
                  algorithmic, platform-specific or regular expression
                  filter)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>skipdirs</term>

                <listitem>
                  <para>Are the directories contained in this directory to be
                  excluded? 0 = No. 1 = Yes. 2 = Always (excluded by an
                  algorithmic, platform-specific or regular expression
                  filter)</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>files</term>

          <listitem>
            <para>A JSON object. The property keys are file names. The
            property values are JSON objects with the following format:</para>

            <variablelist>
              <varlistentry>
                <term>files</term>

                <listitem>
                  <para>Is this file to be excluded? 0 = No. 1 = Yes. 2 =
                  Always (excluded by an algorithmic, platform-specific or
                  regular expression filter)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>size</term>

                <listitem>
                  <para>The size of the file in bytes.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>setFSFilter</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Sets or resets a filesystem exclusion filter. Available since API
      version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <variablelist>
        <varlistentry>
          <term>root</term>

          <listitem>
            <para>string. The UUID of the fileystem root, default [SITEROOT]
            (the main site database definition). See getFSRoots</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>path</term>

          <listitem>
            <para>string. The path to the folder / file you are excluding. See
            getFSEntities.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>type</term>

          <listitem>
            <para>string. The filter type. See getFSFilters.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>status</term>

          <listitem>
            <para>int. 1 to set the filter, 0 to reset it.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A JSON object with the following keys:</para>

      <variablelist>
        <varlistentry>
          <term>success</term>

          <listitem>
            <para>Bool. True if the operation succeeded.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>newstate</term>

          <listitem>
            <para>Bool. The new state of the filter, true if the filter is
            enabled.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>getIncludedDirectories</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Lists the additional included directories. Available since API
      version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A JSON object. The object keys are the UUIDs of the extra included
      directories. The value of each object key is a JSON array with the
      following keys.</para>

      <variablelist>
        <varlistentry>
          <term>0</term>

          <listitem>
            <para>String. The absolute path to the extra included
            directory.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>1</term>

          <listitem>
            <para>String. Virtual folder for storing its contents inside the
            backup archive.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>setIncludedDirectory</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Add an additional included directory definition. Available since
      API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>uuid</term>

          <listitem>
            <para>String. A unique identified for this definition. If left
            empty a UUIDv4 will be generated automatically.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>path</term>

          <listitem>
            <para>String. The absolute filesystem path of the included
            directory.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>virtualFolder</term>

          <listitem>
            <para>String. The name of the folder inside the archive's
            extradirs directory where the files of the included directory will
            be stored. Default: the name of the included directory (last
            component of its path).</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A JSON object</para>

      <variablelist>
        <varlistentry>
          <term>success</term>

          <listitem>
            <para>Bool. True on success.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>newstate</term>

          <listitem>
            <para>Bool. Ignored (always false).</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>removeIncludedDirectory</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Removes an additional included directory definition. Available
      since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>uuid</term>

          <listitem>
            <para>String. A unique identified for the definition to
            delete.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A JSON object</para>

      <variablelist>
        <varlistentry>
          <term>success</term>

          <listitem>
            <para>Bool. True on success.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>newstate</term>

          <listitem>
            <para>Bool. Ignored (always true).</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>getIncludedDBs</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Lists the additional included database definitions. Available
      since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A JSON object. The object keys are the unique names of the extra
      included datbases. The value of each object key is a JSON array with the
      following keys.</para>

      <variablelist>
        <varlistentry>
          <term>host</term>

          <listitem>
            <para>String. The hostname of the database</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>port</term>

          <listitem>
            <para>Int. The port of the database server, null if not
            specified.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>driver</term>

          <listitem>
            <para>String. Database driver to use, e.g. mysql, mysqli,
            pdomysql, mssql, sqlazure, postgresql</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>user</term>

          <listitem>
            <para>String. The user name to connect to the database
            server.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>password</term>

          <listitem>
            <para>String. The password to connect to the database
            server.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>database</term>

          <listitem>
            <para>String. The name of the database you are connecting
            to.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>setIncludedDB</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Adds an additional included database definition. Available since
      API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>name</term>

          <listitem>
            <para>String. The unique name for this database. It is best to
            only use lowercase letters and dashes.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>connection</term>

          <listitem>
            <para>A JSON object with the following keys.</para>

            <para><variablelist>
                <varlistentry>
                  <term>host</term>

                  <listitem>
                    <para>String. The hostname of the database</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>port</term>

                  <listitem>
                    <para>Int. The port of the database server, null if not
                    specified.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>driver</term>

                  <listitem>
                    <para>String. Database driver to use, e.g. mysql, mysqli,
                    pdomysql, mssql, sqlazure, postgresql</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>user</term>

                  <listitem>
                    <para>String. The user name to connect to the database
                    server.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>password</term>

                  <listitem>
                    <para>String. The password to connect to the database
                    server.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>database</term>

                  <listitem>
                    <para>String. The name of the database you are connecting
                    to.</para>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>test</term>

          <listitem>
            <para>Bool. True (default) to test the connection before
            saving.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>Boolean true on success.</para>
    </section>

    <section>
      <title>removeIncludedDB</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Removes an additional included database definition. Available
      since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>name</term>

          <listitem>
            <para>String. The unique name of the db to remove.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>Boolean true on success.</para>
    </section>

    <section>
      <title>testDBConnection</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Test the connection to a database, used to test connection
      information before submitting it to setIncludedDB. Available since API
      version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <variablelist>
        <varlistentry>
          <term>connection</term>

          <listitem>
            <para>A JSON object with the following keys.</para>

            <para><variablelist>
                <varlistentry>
                  <term>host</term>

                  <listitem>
                    <para>String. The hostname of the database</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>port</term>

                  <listitem>
                    <para>Int. The port of the database server, null if not
                    specified.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>driver</term>

                  <listitem>
                    <para>String. Database driver to use, e.g. mysql, mysqli,
                    pdomysql, mssql, sqlazure, postgresql</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>user</term>

                  <listitem>
                    <para>String. The user name to connect to the database
                    server.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>password</term>

                  <listitem>
                    <para>String. The password to connect to the database
                    server.</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>database</term>

                  <listitem>
                    <para>String. The name of the database you are connecting
                    to.</para>
                  </listitem>
                </varlistentry>
              </variablelist></para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>A JSON object.</para>

      <variablelist>
        <varlistentry>
          <term>status</term>

          <listitem>
            <para>Bool. True if the connection is successful.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>message</term>

          <listitem>
            <para>String. Error message when status is false.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>getRegexDBFilters</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Returns the regular expression database exclusion filters for the
      backup profile. Available since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>root</term>

          <listitem>
            <para>String. The database root to get filters for (default:
            [SITEDB])</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>An array of JSON objects is returned. Each object has the
      following keys:</para>

      <variablelist>
        <varlistentry>
          <term>type</term>

          <listitem>
            <para>String. Filter type. One of regextables (exclude an entire
            table / view / function / trigger / procedure from the backup) or
            regextabledata (exclude the contents of the table, not its
            structure).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>item</term>

          <listitem>
            <para>String. The filter's regular expression.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>setRegexDBFilter</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Sets a regular expression database exclusion filter for the backup
      profile. Available since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>root</term>

          <listitem>
            <para>String. The database root to get filters for (default:
            [SITEDB])</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>regex</term>

          <listitem>
            <para>String. The regular expression to set.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>type</term>

          <listitem>
            <para>String. Filter type, see getRegexDBFilters.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>status</term>

          <listitem>
            <para>Bool. True to set the filter, false to reset (remove) the
            filter.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>Boolean true on success.</para>
    </section>

    <section>
      <title>getRegexFSFilters</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Returns the regular expression filesystem exclusion filters for
      the backup profile. Available since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>root</term>

          <listitem>
            <para>String. The filesystem root to get filters for (default:
            [SITEROOT])</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>An array of JSON objects is returned. Each object has the
      following keys:</para>

      <variablelist>
        <varlistentry>
          <term>type</term>

          <listitem>
            <para>String. Filter type. One of regexfiles (exclude files
            matching the regex), regexdirectories (exclude the directories
            matching the regex), regexskipdirs (exclude the subdirectories of
            directories matching the regex), regexskipfiles (exclude the files
            of the directories matching the regex)</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>item</term>

          <listitem>
            <para>String. The filter's regular expression.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title>setRegexFSFilter</title>

      <warning>
        <para><emphasis role="bold">DEPRECATED</emphasis> - This method will
        be removed in Akeeba Backup for Joomla 10, Akeeba Backup for WordPress
        8, and Akeeba Solo 8. Versions of our software released after
        September 2023 may no longer include this method even if their major
        version is below those specified in this message.</para>
      </warning>

      <para>Sets a regular expression filesystem exclusion filter for the
      backup profile. Available since API version 340.</para>

      <bridgehead renderas="sect3">Request Data expected</bridgehead>

      <para>All fields are MANDATORY.</para>

      <variablelist>
        <varlistentry>
          <term>profile</term>

          <listitem>
            <para>Integer. The profile ID you want to list.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>root</term>

          <listitem>
            <para>String. The filesystem root to get filters for (default:
            [SITEROOT])</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>regex</term>

          <listitem>
            <para>String. The regular expression to set.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>type</term>

          <listitem>
            <para>String. Filter type, see getRegexFSFilters.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>status</term>

          <listitem>
            <para>Bool. True to set the filter, false to reset (remove) the
            filter.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead renderas="sect3">Response Data returned</bridgehead>

      <para>Boolean true on success.</para>
    </section>
  </section>
</article>
